To approach software design, it is important to start by clearly defining the requirements and creating a high-level design that outlines the main components and their interactions. For this 3D scene project, this meant researching similar works, sample code, prototyping basic versions to test different lighting and texture effects, and refining the design based on feedback from my professor. This iterative process not only enhances visual design skills but also improves problem-solving abilities, allowing me to address challenges related to object rendering and lighting more effectively.

In developing programs, I can begin with a minimal version that focuses on core functionalities while employing modular development to break the project into manageable components. Implementing version control and a testing strategy will help track changes and ensure the quality of graphics. Throughout my development journey, iteration has made me more adaptable, allowing me to refine code in response to feedback. The skills gained from computational graphics not only support educational pursuits in computer science but also open up opportunities in fields like game development and data visualization, where effective communication of complex data is essential.

